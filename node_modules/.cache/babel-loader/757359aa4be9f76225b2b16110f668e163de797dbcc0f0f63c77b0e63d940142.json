{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { login } from \"../actions/userActions\";\nconst initialState = {\n  currentUser: null,\n  token: localStorage.getItem(\"token\") || \"\",\n  isLoading: false,\n  error: null\n};\nexport const userSlice = createSlice({\n  name: \"user\",\n  initialState,\n  reducers: {\n    logout: state => {\n      localStorage.removeItem(\"token\");\n      state.currentUser = null;\n      state.token = \"\";\n    },\n    setUser: (state, action) => {\n      state.currentUser = action.payload;\n    },\n    setLoading: (state, action) => {\n      state.loading = action.payload;\n    },\n    setError: (state, action) => {\n      state.error = action.payload;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(login.pending, state => {\n      state.isLoading = true;\n      state.error = null;\n    }).addCase(login.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.error = null;\n      state.token = action.payload.token;\n      state.currentUser = action.payload.user;\n    }).addCase(login.rejected, (state, action) => {\n      state.isLoading = false;\n      state.error = action.error.message;\n      state.token = \"\";\n      state.currentUser = null;\n      console.log(\"rejected\");\n    });\n  }\n});\nexport const {\n  logout\n} = userSlice.actions;\nexport const selectToken = state => state.user.token;\nexport const selectCurrentUser = state => state.user.currentUser;\nexport const selectIsLoading = state => state.user.isLoading;\nexport const selectError = state => state.user.error;\nexport const {\n  setUser,\n  setLoading,\n  setError\n} = userSlice.actions;\nexport default userSlice.reducer;","map":{"version":3,"names":["createSlice","login","initialState","currentUser","token","localStorage","getItem","isLoading","error","userSlice","name","reducers","logout","state","removeItem","setUser","action","payload","setLoading","loading","setError","extraReducers","builder","addCase","pending","fulfilled","user","rejected","message","console","log","actions","selectToken","selectCurrentUser","selectIsLoading","selectError","reducer"],"sources":["D:/03. Project/01. Web/ecommerce-app-ms-sql-net-react/frontend/src/store/reducers/userSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { login } from \"../actions/userActions\";\r\n\r\nconst initialState = {\r\n  currentUser: null,\r\n  token: localStorage.getItem(\"token\") || \"\",\r\n  isLoading: false,\r\n  error: null,\r\n};\r\n\r\nexport const userSlice = createSlice({\r\n  name: \"user\",\r\n  initialState,\r\n  reducers: {\r\n    logout: (state) => {\r\n      localStorage.removeItem(\"token\");\r\n      state.currentUser = null;\r\n      state.token = \"\";\r\n    },\r\n    setUser: (state, action) => {\r\n      state.currentUser = action.payload;\r\n    },\r\n    setLoading: (state, action) => {\r\n      state.loading = action.payload;\r\n    },\r\n    setError: (state, action) => {\r\n      state.error = action.payload;\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(login.pending, (state) => {\r\n        state.isLoading = true;\r\n        state.error = null;\r\n\r\n      })\r\n      .addCase(login.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        state.error = null;\r\n        state.token = action.payload.token;\r\n        state.currentUser = action.payload.user;\r\n      })\r\n      .addCase(login.rejected, (state, action) => {\r\n        state.isLoading = false;\r\n        state.error = action.error.message;\r\n        state.token = \"\";\r\n        state.currentUser = null;\r\n        console.log(\"rejected\")\r\n      });\r\n  },\r\n});\r\n\r\nexport const { logout } = userSlice.actions;\r\n\r\nexport const selectToken = (state) => state.user.token;\r\nexport const selectCurrentUser = (state) => state.user.currentUser;\r\nexport const selectIsLoading = (state) => state.user.isLoading;\r\nexport const selectError = (state) => state.user.error;\r\n\r\nexport const { setUser, setLoading, setError } = userSlice.actions;\r\n\r\n\r\nexport default userSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,KAAK,QAAQ,wBAAwB;AAE9C,MAAMC,YAAY,GAAG;EACnBC,WAAW,EAAE,IAAI;EACjBC,KAAK,EAAEC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,IAAI,EAAE;EAC1CC,SAAS,EAAE,KAAK;EAChBC,KAAK,EAAE;AACT,CAAC;AAED,OAAO,MAAMC,SAAS,GAAGT,WAAW,CAAC;EACnCU,IAAI,EAAE,MAAM;EACZR,YAAY;EACZS,QAAQ,EAAE;IACRC,MAAM,EAAGC,KAAK,IAAK;MACjBR,YAAY,CAACS,UAAU,CAAC,OAAO,CAAC;MAChCD,KAAK,CAACV,WAAW,GAAG,IAAI;MACxBU,KAAK,CAACT,KAAK,GAAG,EAAE;IAClB,CAAC;IACDW,OAAO,EAAEA,CAACF,KAAK,EAAEG,MAAM,KAAK;MAC1BH,KAAK,CAACV,WAAW,GAAGa,MAAM,CAACC,OAAO;IACpC,CAAC;IACDC,UAAU,EAAEA,CAACL,KAAK,EAAEG,MAAM,KAAK;MAC7BH,KAAK,CAACM,OAAO,GAAGH,MAAM,CAACC,OAAO;IAChC,CAAC;IACDG,QAAQ,EAAEA,CAACP,KAAK,EAAEG,MAAM,KAAK;MAC3BH,KAAK,CAACL,KAAK,GAAGQ,MAAM,CAACC,OAAO;IAC9B;EACF,CAAC;EACDI,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAACtB,KAAK,CAACuB,OAAO,EAAGX,KAAK,IAAK;MACjCA,KAAK,CAACN,SAAS,GAAG,IAAI;MACtBM,KAAK,CAACL,KAAK,GAAG,IAAI;IAEpB,CAAC,CAAC,CACDe,OAAO,CAACtB,KAAK,CAACwB,SAAS,EAAE,CAACZ,KAAK,EAAEG,MAAM,KAAK;MAC3CH,KAAK,CAACN,SAAS,GAAG,KAAK;MACvBM,KAAK,CAACL,KAAK,GAAG,IAAI;MAClBK,KAAK,CAACT,KAAK,GAAGY,MAAM,CAACC,OAAO,CAACb,KAAK;MAClCS,KAAK,CAACV,WAAW,GAAGa,MAAM,CAACC,OAAO,CAACS,IAAI;IACzC,CAAC,CAAC,CACDH,OAAO,CAACtB,KAAK,CAAC0B,QAAQ,EAAE,CAACd,KAAK,EAAEG,MAAM,KAAK;MAC1CH,KAAK,CAACN,SAAS,GAAG,KAAK;MACvBM,KAAK,CAACL,KAAK,GAAGQ,MAAM,CAACR,KAAK,CAACoB,OAAO;MAClCf,KAAK,CAACT,KAAK,GAAG,EAAE;MAChBS,KAAK,CAACV,WAAW,GAAG,IAAI;MACxB0B,OAAO,CAACC,GAAG,CAAC,UAAU,CAAC;IACzB,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAElB;AAAO,CAAC,GAAGH,SAAS,CAACsB,OAAO;AAE3C,OAAO,MAAMC,WAAW,GAAInB,KAAK,IAAKA,KAAK,CAACa,IAAI,CAACtB,KAAK;AACtD,OAAO,MAAM6B,iBAAiB,GAAIpB,KAAK,IAAKA,KAAK,CAACa,IAAI,CAACvB,WAAW;AAClE,OAAO,MAAM+B,eAAe,GAAIrB,KAAK,IAAKA,KAAK,CAACa,IAAI,CAACnB,SAAS;AAC9D,OAAO,MAAM4B,WAAW,GAAItB,KAAK,IAAKA,KAAK,CAACa,IAAI,CAAClB,KAAK;AAEtD,OAAO,MAAM;EAAEO,OAAO;EAAEG,UAAU;EAAEE;AAAS,CAAC,GAAGX,SAAS,CAACsB,OAAO;AAGlE,eAAetB,SAAS,CAAC2B,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}